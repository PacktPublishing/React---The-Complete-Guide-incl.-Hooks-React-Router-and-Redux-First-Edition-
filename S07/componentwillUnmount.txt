componentWillUnmount()
Section 7, Lecture 85
We saw the Component Lifecycle during Component Creation in Action. 

There also is one Lifecycle method which gets executed (when implemented) right before a Component is removed from the DOM: componentWillUnmount() .

Here's an Example:

App.js (using class App extends Component )

state = {
    showUserComponent: true
};
 
removeUserHandler = () => {
    this.setState({showUserComponent: false});
}
 
render() {
    return (
        <div>
            {this.state.showUserComponent ? <User /> : null}
            <button onClick={this.removeUserHandler}>Remove User Component</button>
        </div>
    );
}
User.js (using class User extends Component )

componentWillUnmount() {
    // Component is about to get removed => Perform any cleanup work here!
    console.log('I\'m about to be removed!');
}
In the above example, the User component is removed upon a button click (due to it being rendered conditionally and the condition result being changed to false ). This triggers componentWillUnmount()  to run in the User component right before the component is destroyed and removed from the DOM.